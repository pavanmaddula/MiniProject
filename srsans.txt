declare
studentid number:=&student_id;
 stu_id student_details.student_id%type;
stu_name student_details.student_name%type;
backlogs number;
v_num number;
STATUS VARCHAR2(20);
begin
select count(student_id) into v_num  from campus_selections where student_id=studentid;
select s.student_id,s.student_name,sum(m.backlogs) into stu_id,stu_name, backlogs from student_details s join acadamic_status m on(m.student_id=s.student_id) where s.student_id=studentid GROUP by s.student_id,s.student_name;
if(v_num >=1) then
status:='SELECTED';
else
status:='NOT SELECTED';
END IF;
--dbms_output.put_line('student_id:   '||v_data.student_id ||'   student_name: '|| v_data.student_name||'   no_of_backlogs '||v_data.backlogs ||'STATUS:' || STATUS);
dbms_output.put_line('student_id:   '||stu_id ||'   student_name: '|| stu_name ||'   backlogs: ' || backlogs||'   STATUS: ' || STATUS) ;
end;




DISPLAY ELIGBILE STUDENTS BASED ON COMPANY;
DECLARE
CURSOR C1 IS select s.student_id,s.student_name,b.dept_name,sum(a.sem_marks) marks 
from student_details s join branch_details b on (s.dept_id=b.dept_id) join acadamic_status a on(s.student_id=a.student_id)
  group by s.student_id,s.student_name,b.dept_name;
v_data c1%rowtype;
v_agg number;
v_eligibility number;
v_branches varchar2(30);
--where INSTR(B.DEPT_NAME,'ECE')>0
x number;
begin
select  ELIGIBILITY,BRANCHES_ALLWD   into v_eligibility,v_branches from companies where cmp_name='CALIBAR';
open c1;
loop 
fetch c1 into v_data;
exit when c1%notfound;
v_agg:=round((v_data.marks/6000)*100);
x:=INSTR(V_BRANCHES,v_data.dept_name) ;
--dbms_output.put_line('the x is ' || x);
if(v_agg>=v_eligibility AND  X>0  ) then
dbms_output.put_line(v_data.student_id || '  ' ||v_data.student_name || ' ' ||  v_data.dept_name || ' ' || v_data.marks ||' '||v_agg || v_branches) ;
end if;
end loop;
end;

MAX_NUMBER OF SELECTIONS

 CREATE OR REPLACE PROCEDURE GET_MAX IS
 V_MAX NUMBER;
 V_NAME VARCHAR2(30);
 ID NUMBER;
 BEGIN
 EXECUTE IMMEDIATE 'CREATE OR REPLACE VIEW V_10 AS SELECT  student_id,count(*) SELECTIONS from campus_selections group by student_id';
 SELECT S.STUDENT_NAME,S.STUDENT_ID,V.SELECTIONS INTO V_NAME,ID,V_MAX FROM STUDENT_DETAILS S JOIN V_10 V ON (S.STUDENT_ID=V.STUDENT_ID) WHERE V.SELECTIONS=(SELECT MAX(SELECTIONS) FROM V_10);
 DBMS_OUTPUT.PUT_LINE(V_NAME || '   '  || V_MAX);
 END;


